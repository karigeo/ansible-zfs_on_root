---
# [ Prepare for First Reboot ]#################################################
- name: Prepare for First Reboot Block
  when:
    - ansible_nodename != "localhost"
  tags:
    - first_boot_prep
  block:

############NOT POSSIBLE, BECAUSE ANSIBLE USER IS BEING USED####################
    # [ Configure Ansible User correctly ] ###############################
    # - name: Disable Ansible user's password and move home
    #   ansible.builtin.user:
    #     name: ansible
    #     comment: "Ansible User (use only with SSH)"
    #     create_home: false
    #     home: /home/ansible
    #     move_home: true
    #     password: '*'

    # [ Start Upgrading install ]##############################################
    - name: Run apt dist-upgrade
      ansible.builtin.apt:
        upgrade: dist
        update_cache: true
        autoclean: true
        autoremove: true
        purge: true

    # - name: Run commands to enable acpid if detected
    #   ansible.builtin.command:
    #     cmd: "{{ item }}"
    #   register: cmd_output
    #   changed_when: cmd_output.rc == 0
    #   with_items:
    #     - '[ -d /proc/acpi ] && apt-get -qq --yes install acpi acpid && systemctl enable acpid && systemctl stop acpid'

    - name: Add nicer PS1 USER prompt
      ansible.builtin.lineinfile:
        path: "{{ item }}"
        line: >
          PS1="${debian_chroot:+($debian_chroot)}\[\e[38;5;207;1m\]\u\[\e[0;38;5;177m\]@\[\e[38;5;45m\]\h\[\e[0m\] \W/: "
        state: present
        backup: true
      with_items:
        - "/etc/bash.bashrc"
        - "/etc/skel/.bashrc"

    - name: Add nicer PS1 ROOT prompt
      ansible.builtin.lineinfile: # noqa yaml[line-length]
        path: "/root/.bashrc"
        line: >
          PS1="\[\e[38;5;197;1m\]\u\[\e[0;38;5;177m\]@\[\e[38;5;45m\]\h\[\e[0m\] \W/: "
        state: present
        backup: true

    - name: Allow read-only ZFS commands with no sudo password
      ansible.builtin.shell: # noqa command-instead-of-shell
        "{{ item }}"
      args:
        executable: /bin/bash
      register: cmd_output
      changed_when: cmd_output.rc == 0
      with_items:
        - "set -o pipefail; cat /etc/sudoers.d/zfs | sed -e 's/#//' > /etc/sudoers.d/zfsALLOW"

    - name: Install pip
      apt:
        name:
          - python3-pip

    - name: Ignore PEP 668 because it's silly.
      ansible.builtin.file:
        path: /usr/lib/python3.11/EXTERNALLY-MANAGED
        state: absent

    - name: Install pexpect
      pip:
        name: pexpect

    - name: Run command to set default root password
      ansible.builtin.expect:
        command: "passwd"
        responses:
          (?i)password: "{{ default_root_password }}"
      no_log: "{{ no_log_secrets | default(true) }}"

    - name: Run command to enable mount on default/root dataset
      ansible.builtin.command:
        cmd: "zfs set canmount=on {{ root_pool_dataset_path }}"
      register: cmd_output
      changed_when: cmd_output.rc == 0

    - name: Pause for a second to settle
      ansible.builtin.pause:
        seconds: 1
