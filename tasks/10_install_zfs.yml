---
# [ Install ZFS and Kernel ]###################################################
# If optional kernel hardware enablement feature is enabled, will be used here.

- name: Install ZFS into chroot Block
  when:
    - ansible_nodename != "localhost"
  tags:
    - install_zfs
  block:
    - name: Install Kernel Driver Packages
      ansible.builtin.apt:
        name:
          - software-properties-common
          - dkms
        install_recommends: false
      when:
        - ansible_os_family == "Debian"

    - name: Ensure ZFS update rebuilds all initramfs
      copy:
        dest: /etc/dkms/zfs.conf
        content: REMAKE_INITRD=yes
        mode: '0644'

    - name: Install further required Software and ZFS into chroot
      ansible.builtin.apt:
        name:
          - console-setup
          - locales
          - dpkg-dev
          - linux-headers-generic
          - linux-image-generic
          - dropbear-initramfs
          - mdadm
          - wget
          - nano
          - vim
          - openssh-server
          - sudo
          - bridge-utils
          - lvm2
          - zfsutils-linux
          - zfs-zed
          - zfs-initramfs
        install_recommends: false
      when:
        - ansible_os_family == "Debian"

    - name: Purge os-prober
      ansible.builtin.apt:
        name:
          - os-prober
        state: absent
        purge: true
      when:
        - ansible_os_family == "Debian"

    # The "old" kernel links mess up zfsbootmenu generation, so remove them
    # Don't need them for an initial install anyway
    - name: Clean up old kernel links
      ansible.builtin.file:
        state: absent
        path: "{{ item }}"
      loop:
        - "{{ live_cd_mountpoint }}/boot/vmlinuz.old"
        - "{{ live_cd_mountpoint }}/boot/initrd.img.old"

    - name: Ensure cachefile exists
      ansible.builtin.command:
        cmd: "{{ item }}"
      register: cmd_output
      changed_when: cmd_output.rc == 0
      with_items:
        - "zpool set cachefile=/etc/zfs/zpool.cache {{ root_pool_name }}"
    
    - name: Ensure zfs-import-cache is active
      ansible.builtin.systemd_service:
        name: "{{ item }}"
        enabled: true
      loop:
        - zfs.target
        - zfs-import-cache
        - zfs-mount
        - zfs-import.target
