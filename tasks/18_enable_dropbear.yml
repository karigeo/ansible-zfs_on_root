---
- name: Configure System for Dropbear and Busybox to allow Remote Unlock Block
  when:
    - enable_dropbear_support | default(false) | bool
  tags:
    - install_dropbear
  block:

    - name: Install Dracut-Network and Dropbear
      ansible.builtin.apt:
        name: ['dracut-network', 'dropbear', 'isc-dhcp-client']
        state: present
      when:
        - ansible_os_family == "Debian"

    - name: Stop and disable dropbear.service
      ansible.builtin.systemd_service:
        name: dropbear
        enabled: false
        state: stopped
        
    - name: Remove dracut-crypt-ssh directory
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - "/tmp/dracut-crypt-ssh/"
        - "/usr/lib/dracut/modules.d/60crypt-ssh/"

    - name: Create fresh temporary dracut-crypt-ssh directory
      ansible.builtin.file:
        path: "/tmp/dracut-crypt-ssh"
        state: directory
        mode: "0755"

    - name: Fetch dracut-crypt-ssh source from GIT
      ansible.builtin.git:
        clone: true
        repo: https://github.com/dracut-crypt-ssh/dracut-crypt-ssh.git
        dest: /tmp/dracut-crypt-ssh/
        force: true

    - name: Create dracut module 60crypt-ssh directory
      ansible.builtin.file:
        path: "/usr/lib/dracut/modules.d/60crypt-ssh"
        mode: "0755"
        state: directory

    - name: Copy dracut module 60crypt-ssh directory files
      ansible.builtin.copy:
        src: /tmp/dracut-crypt-ssh/modules/60crypt-ssh/
        dest: /usr/lib/dracut/modules.d/60crypt-ssh/
        remote_src: true
        mode: "0755"

    - name: Remove Makefile and helpers from dracut module 60crypt-ssh
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - "/usr/lib/dracut/modules.d/60crypt-ssh/Makefile"
        - "/usr/lib/dracut/modules.d/60crypt-ssh/helper/"
    
    # Comment out all lines containing: inst "$moddir"/helper/
    - name: Modify dracut module module-setup.sh
      ansible.builtin.replace:
        path: "/usr/lib/dracut/modules.d/60crypt-ssh/module-setup.sh"
        regexp: '(^.*inst "\$moddir"\/helper\/.*$)'
        replace: '#\1'

    # [ Setup Dracut Networking for Dropbear]##################################

    # With rd.neednet=1 it will fail to boot if no network available
    # This can be a problem with laptops and docking stations, if the dock
    # is not connected (no ethernet) it can fail to boot
    - name: Create file /etc/cmdline.d/dracut-network.conf for DHCP
      ansible.builtin.lineinfile:
        path: "/etc/cmdline.d/dracut-network.conf"
        regexp: '(^.*ip=.*$)'
        line: 'ip={{ apply_dropbear_settings.remoteaccess_ip_config }} rd.neednet=1'
        create: true
        mode: "0644"
        state: present
        backup: false
      when:
        - not apply_dropbear_settings.remoteaccess_ip_config == "static"

    # With rd.neednet=1 it will fail to boot if no network available
    # This can be a problem with laptops and docking stations, if the dock
    # is not connected (no ethernet) it can fail to boot
    - name: Create file /etc/cmdline.d/dracut-network.conf for Static IP
      ansible.builtin.lineinfile:
        path: "/etc/cmdline.d/dracut-network.conf"
        regexp: '(^.*ip=.*$)'
        line: 'ip={{ apply_dropbear_settings.remoteaccess_ip }}:::{{ apply_dropbear_settings.remoteaccess_netmask }}:::none rd.neednet=1 rd.break'
        create: true
        mode: "0644"
        state: present
        backup: false
      when:
        - apply_dropbear_settings.remoteaccess_ip_config == "static"

    - name: Config to publish hostname to DHCP server
      ansible.builtin.lineinfile:
        path: /usr/lib/dracut/modules.d/35network-legacy/dhclient.conf
        regexp: '(^.*send fqdn\.fqdn.*$)'
        line: "send fqdn.fqdn \"{{ host_name }}\";"
        state: present
        backup: false

    # [ Add Dropbear welcome messate ]####################################
    - name: Copy dracut network banner to /etc/zfsbootmenu/dracut.conf.d/banner.txt
      ansible.builtin.template:
        src: dracut_banner.txt.j2
        dest: "/etc/zfsbootmenu/dracut.conf.d/banner.txt"
        owner: root
        group: root
        mode: '0755'

    - name: Add network banner to dropbear startup parameters
      ansible.builtin.replace:
        path: "/usr/lib/dracut/modules.d/60crypt-ssh/dropbear-start.sh"
        regexp: '(^.* /sbin/dropbear .*$)'
        replace: '\1 -b /etc/banner.txt'

    - name: Add network banner to dracut module setup
      ansible.builtin.replace:
        path: "/usr/lib/dracut/modules.d/60crypt-ssh/module-setup.sh"
        after: '(install\(\) {)'
        regexp: '(^}$)'
        replace: |
            #
            # Copy dropbear welcome banner message
              inst /etc/zfsbootmenu/dracut.conf.d/banner.txt /etc/banner.txt
            }

    # [ Setup Host Keys ]######################################################
    # We will convert the machine's existing host keys for dropbear to not get the "Host Key Verification Failed" error.
    - name: Create /etc/dropbear/ directory for host keys
      ansible.builtin.file:
        path: "/etc/dropbear/"
        mode: "0755"
        state: directory

    ### it seems that module-setup.sh of 60crypt-ssh can convert the openssh host system keys just fine, 
    ### so commented out and specified host keys in dracut_dropbear.conf template
    # - name: Copy SSH Server Keys into temporary location
    #   ansible.builtin.copy: 
    #     dest: "/tmp/ssh/"
    #     src: "/etc/ssh/ssh_host_{{ item }}_key"
    #     remote_src: true
    #     owner: root
    #     group: root
    #     mode: '0600'
    #   loop:
    #   # The dropbear.conf will look for these 3 keys
    #     - "ecdsa"
    #     - "ed25519"
    #     - "rsa"

    # - name: Convert temporary ssh keys to PEM format
    #   ansible.builtin.command:
    #     cmd: 'ssh-keygen -p -N "" -m PEM -f /tmp/ssh/ssh_host_{{ item }}_key'
    #   register: cmd_output
    #   changed_when: cmd_output.rc == 0
    #   loop:
    #     - "ecdsa"
    #     - "ed25519"
    #     - "rsa"

    # - name: Convert SSH keys to dropbear format
    #   ansible.builtin.command:
    #     cmd: 'dropbearconvert openssh dropbear /tmp/ssh/ssh_host_{{ item }}_key /etc/dropbear/dropbear_{{ item }}_host_key'
    #   register: cmd_output
    #   changed_when: cmd_output.rc == 0
    #   loop:
    #     - "ecdsa"
    #     - "ed25519"
    #     - "rsa"
      
    # - name: Remove temporary key files
    #   ansible.builtin.file:
    #     path: "/tmp/ssh/"
    #     state: absent

    # [ Add dracut dropbear config file ]######################################
    - name: Copy dracut dropbear config file to /etc/zfsbootmenu/dracut.conf.d/dropbear.conf
      ansible.builtin.template:
        src: dracut_dropbear.conf.j2
        dest: "/etc/zfsbootmenu/dracut.conf.d/dropbear.conf"
        owner: "root"
        group: "root"
        mode: "0644"

    - name: Run generate-zbm
      ansible.builtin.shell: |
        generate-zbm --debug
      register: cmd_output
      changed_when: cmd_output.rc == 0

    - name: Debug show output of generate-zbm
      ansible.builtin.debug:
        var: cmd_output['stdout']
      when:
        debug | default(false)
